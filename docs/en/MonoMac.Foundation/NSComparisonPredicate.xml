<Type Name="NSComparisonPredicate" FullName="MonoMac.Foundation.NSComparisonPredicate">
  <TypeSignature Language="C#" Value="public class NSComparisonPredicate : MonoMac.Foundation.NSPredicate" />
  <AssemblyInfo>
    <AssemblyName>MonoMac</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>MonoMac.Foundation.NSPredicate</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>MonoMac.Foundation.Register("NSComparisonPredicate")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSComparisonPredicate ();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("init")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSComparisonPredicate (MonoMac.Foundation.NSCoder coder);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("initWithCoder:")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="coder" Type="MonoMac.Foundation.NSCoder" />
      </Parameters>
      <Docs>
        <param name="coder">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSComparisonPredicate (MonoMac.Foundation.NSObjectFlag t);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="t" Type="MonoMac.Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSComparisonPredicate (IntPtr handle);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSComparisonPredicate (MonoMac.Foundation.NSExpression leftExpression, MonoMac.Foundation.NSExpression rightExpression, MonoMac.ObjCRuntime.Selector selector);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("initWithLeftExpression:rightExpression:customSelector:")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="leftExpression" Type="MonoMac.Foundation.NSExpression" />
        <Parameter Name="rightExpression" Type="MonoMac.Foundation.NSExpression" />
        <Parameter Name="selector" Type="MonoMac.ObjCRuntime.Selector" />
      </Parameters>
      <Docs>
        <param name="leftExpression">To be added.</param>
        <param name="rightExpression">To be added.</param>
        <param name="selector">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSComparisonPredicate (MonoMac.Foundation.NSExpression leftExpression, MonoMac.Foundation.NSExpression rightExpression, MonoMac.Foundation.NSComparisonPredicateModifier comparisonModifier, MonoMac.Foundation.NSPredicateOperatorType operatorType, MonoMac.Foundation.NSComparisonPredicateOptions comparisonOptions);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("initWithLeftExpression:rightExpression:modifier:type:options:")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="leftExpression" Type="MonoMac.Foundation.NSExpression" />
        <Parameter Name="rightExpression" Type="MonoMac.Foundation.NSExpression" />
        <Parameter Name="comparisonModifier" Type="MonoMac.Foundation.NSComparisonPredicateModifier" />
        <Parameter Name="operatorType" Type="MonoMac.Foundation.NSPredicateOperatorType" />
        <Parameter Name="comparisonOptions" Type="MonoMac.Foundation.NSComparisonPredicateOptions" />
      </Parameters>
      <Docs>
        <param name="leftExpression">To be added.</param>
        <param name="rightExpression">To be added.</param>
        <param name="comparisonModifier">To be added.</param>
        <param name="operatorType">To be added.</param>
        <param name="comparisonOptions">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassHandle">
      <MemberSignature Language="C#" Value="public override IntPtr ClassHandle { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ComparisonPredicateModifier">
      <MemberSignature Language="C#" Value="public virtual MonoMac.Foundation.NSComparisonPredicateModifier ComparisonPredicateModifier { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoMac.Foundation.Export("comparisonPredicateModifier")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoMac.Foundation.NSComparisonPredicateModifier</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static MonoMac.Foundation.NSPredicate Create (MonoMac.Foundation.NSExpression leftExpression, MonoMac.Foundation.NSExpression rightExpression, MonoMac.Foundation.NSComparisonPredicateModifier comparisonModifier, MonoMac.Foundation.NSPredicateOperatorType operatorType, MonoMac.Foundation.NSComparisonPredicateOptions comparisonOptions);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("predicateWithLeftExpression:rightExpression:modifier:type:options:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoMac.Foundation.NSPredicate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="leftExpression" Type="MonoMac.Foundation.NSExpression" />
        <Parameter Name="rightExpression" Type="MonoMac.Foundation.NSExpression" />
        <Parameter Name="comparisonModifier" Type="MonoMac.Foundation.NSComparisonPredicateModifier" />
        <Parameter Name="operatorType" Type="MonoMac.Foundation.NSPredicateOperatorType" />
        <Parameter Name="comparisonOptions" Type="MonoMac.Foundation.NSComparisonPredicateOptions" />
      </Parameters>
      <Docs>
        <param name="leftExpression">To be added.</param>
        <param name="rightExpression">To be added.</param>
        <param name="comparisonModifier">To be added.</param>
        <param name="operatorType">To be added.</param>
        <param name="comparisonOptions">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomSelector">
      <MemberSignature Language="C#" Value="public virtual MonoMac.ObjCRuntime.Selector CustomSelector { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoMac.Foundation.Export("customSelector")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoMac.ObjCRuntime.Selector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromSelector">
      <MemberSignature Language="C#" Value="public static MonoMac.Foundation.NSPredicate FromSelector (MonoMac.Foundation.NSExpression leftExpression, MonoMac.Foundation.NSExpression rightExpression, MonoMac.ObjCRuntime.Selector selector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("predicateWithLeftExpression:rightExpression:customSelector:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoMac.Foundation.NSPredicate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="leftExpression" Type="MonoMac.Foundation.NSExpression" />
        <Parameter Name="rightExpression" Type="MonoMac.Foundation.NSExpression" />
        <Parameter Name="selector" Type="MonoMac.ObjCRuntime.Selector" />
      </Parameters>
      <Docs>
        <param name="leftExpression">To be added.</param>
        <param name="rightExpression">To be added.</param>
        <param name="selector">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LeftExpression">
      <MemberSignature Language="C#" Value="public virtual MonoMac.Foundation.NSExpression LeftExpression { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoMac.Foundation.Export("leftExpression")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoMac.Foundation.NSExpression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Options">
      <MemberSignature Language="C#" Value="public virtual MonoMac.Foundation.NSComparisonPredicateOptions Options { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoMac.Foundation.Export("options")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoMac.Foundation.NSComparisonPredicateOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PredicateOperatorType">
      <MemberSignature Language="C#" Value="public virtual MonoMac.Foundation.NSPredicateOperatorType PredicateOperatorType { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoMac.Foundation.Export("predicateOperatorType")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoMac.Foundation.NSPredicateOperatorType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RightExpression">
      <MemberSignature Language="C#" Value="public virtual MonoMac.Foundation.NSExpression RightExpression { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoMac.Foundation.Export("rightExpression")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoMac.Foundation.NSExpression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
